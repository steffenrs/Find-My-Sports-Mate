@model PresentationLayer.UserViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit your account</h2>
<p>
    Use the form below to edit your account.
</p>
<p>
    To confirm changes please type in your password.
</p>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true, "Account creation was unsuccessful. Please correct the errors and try again.")
    <div>
        <fieldset>
            <legend>Please Provide Your Information</legend>
            <div style="float:left">
            <div class="editor-label">
                @Html.LabelFor(m => m.FirstName)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.FirstName)
            </div>
             <div class="editor-label">
                @Html.LabelFor(m => m.LastName)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.LastName)
            </div>
            <div class="editor-label">
                @Html.LabelFor(m => m.Gender)
            </div>
            <div class="editor-field">
                @Html.DropDownListFor(model => model.Gender,new List<SelectListItem>()
                    { new SelectListItem(){ Text = "Male", Value="True"}, new SelectListItem(){ Text = "Female", Value="False"}})
            </div>
            <div class="editor-label">
                @Html.LabelFor(m => m.BirthDate)
            </div>
            <div class="editor-field">
                @Html.EditorFor(m => m.BirthDate)
            </div>
            <div class="editor-label">
                @Html.LabelFor(m => m.Email)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.Email)
                @Html.ValidationMessageFor(m => m.Email)
            </div>
            <div class="editor-label">
                @Html.LabelFor(m => m.Password)
            </div>
            <div class="editor-field">
                @Html.PasswordFor(m => m.Password)
                @Html.ValidationMessageFor(m => m.Password)
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.ConfirmPassword)
            </div>
            <div class="editor-field">
                @Html.PasswordFor(m => m.ConfirmPassword)
                @Html.ValidationMessageFor(m => m.ConfirmPassword)
            </div>
            </div>
            <div style="float:left">
            <div class="editor-label">
                @Html.LabelFor(m => m.StreetAddress)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.StreetAddress)
                @*Html.ValidationMessageFor(m => m.Email)*@
            </div>
            <div class="editor-label">
                @Html.LabelFor(m => m.Area)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.Area)
                @*Html.ValidationMessageFor(m => m.Email)*@
            </div>

            <div class="editor-label">
                @Html.LabelFor(m => m.State)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.State)
                @*Html.ValidationMessageFor(m => m.Email)*@
            </div>
           <div class="editor-label">
                @Html.LabelFor(m => m.PhoneNumber)
            </div>
            <div class="editor-field">
                @Html.TextBoxFor(m => m.PhoneNumber)
            </div>
                            
            </div>
            <p style="clear:both">
                <input type="submit" value="Update Account" />
            </p>
                
        </fieldset>
        <input id="DeleteButton" type="button" value="Delete Account" />
    </div>
}
